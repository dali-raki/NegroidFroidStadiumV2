@page "/s"
@using UltimateStadium.Services.UserServie
@rendermode InteractiveServer
@inject NavigationManager man
<div class="form-container">
    <div class="icon">
        ⚽
    </div>
    <h1>Login</h1>
    <form @onsubmit="login">
        <input type="email" @bind="email" placeholder="Email Address" >
        <input type="password" @bind="passsword" placeholder="Password" >
        <input type="submit" value="Login" >
        <a href="#" class="forgot-password">Forgot Password?</a>
    </form>
</div>

<style>
        
        body, html {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            font-family: 'Arial', sans-serif;
        }

        /* Background */
        body {
            background: url('https://media.istockphoto.com/id/1204755567/vector/football-stadium-vector-1.jpg?s=2048x2048&w=is&k=20&c=Au-drUlKIlokAuhUAgS48cxxgsIezVGkLB7CBlR3sDM=') no-repeat center center/cover;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Form Container */
        .form-container {
            background: rgba(0, 0, 0, 0.7);
            border-radius: 10px;
            padding: 30px;
            width: 350px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .form-container h1 {
            color: #ffffff;
            font-size: 24px;
            margin-bottom: 20px;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        /* Input Fields */
        .form-container input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: none;
            border-radius: 5px;
            font-size: 16px;
        }

        .form-container input[type="email"], 
        .form-container input[type="password"] {
            background: #ffffff;
            color: #333;
        }

        .form-container input[type="submit"] {
            background: #28a745;
            color: #ffffff;
            font-weight: bold;
            text-transform: uppercase;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .form-container input[type="submit"]:hover {
            background: #218838;
        }

        /* Extra Style */
        .form-container .icon {
            font-size: 50px;
            color: #28a745;
            margin-bottom: 20px;
        }

        .form-container .forgot-password {
            display: block;
            margin-top: 10px;
            font-size: 14px;
            color: #ffffff;
            text-decoration: none;
        }

        .form-container .forgot-password:hover {
            text-decoration: underline;
        }

        .sidebar,a{
            display:none;
        }

        .top-row[b-rt9c7rigxs], article[b-rt9c7rigxs]{
            background-color:transparent;
            border:none;
        }
    </style>
    
    
        
    
    @code
    {
        [Inject] IUserService userService { get; set; }
        string email { get; set; } = "";
        string passsword { get; set; } = "";


        private async Task login()
        {

           var user= await userService.login(email, passsword);
           if (user.role == 1)
           {
               man.NavigateTo("/admin");
           }
           else if (user.role == 2)
           {
               man.NavigateTo("/manager"); 
           }
           else if (user.role == 3)
           {
               man.NavigateTo("/home"); 
           }
        }
    }
